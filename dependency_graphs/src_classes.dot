digraph "classes_src" {
rankdir=BT
charset="utf-8"
".Protocol" [color="black", fontcolor="black", label=<.Protocol>, shape="record", style="solid"];
".Protocol" [color="black", fontcolor="black", label=<.Protocol>, shape="record", style="solid"];
".Protocol" [color="black", fontcolor="black", label=<.Protocol>, shape="record", style="solid"];
".Protocol" [color="black", fontcolor="black", label=<.Protocol>, shape="record", style="solid"];
".Protocol" [color="black", fontcolor="black", label=<.Protocol>, shape="record", style="solid"];
".StructureGroup" [color="black", fontcolor="black", label=<.StructureGroup>, shape="record", style="solid"];
".T" [color="black", fontcolor="black", label=<.T>, shape="record", style="solid"];
".T" [color="black", fontcolor="black", label=<.T>, shape="record", style="solid"];
".T_destination" [color="black", fontcolor="black", label=<.T_destination>, shape="record", style="solid"];
"line_profiler.line_profiler.LineProfiler" [color="black", fontcolor="black", label=<line_profiler.line_profiler.LineProfiler>, shape="record", style="solid"];
"src.core.attention.base.BaseAttention" [color="black", fontcolor="black", label=<src.core.attention.base.BaseAttention>, shape="record", style="solid"];
"src.core.attention.compute.AttentionCompute" [color="black", fontcolor="black", label=<src.core.attention.compute.AttentionCompute>, shape="record", style="solid"];
"src.core.attention.geometric.EuclideanExponential" [color="black", fontcolor="black", label=<src.core.attention.geometric.EuclideanExponential>, shape="record", style="solid"];
"src.core.attention.geometric.EuclideanLogarithm" [color="black", fontcolor="black", label=<src.core.attention.geometric.EuclideanLogarithm>, shape="record", style="solid"];
"src.core.attention.geometric.GeometricStructures" [color="black", fontcolor="black", label=<src.core.attention.geometric.GeometricStructures>, shape="record", style="solid"];
"src.core.attention.geometric.HyperbolicExponential" [color="black", fontcolor="black", label=<src.core.attention.geometric.HyperbolicExponential>, shape="record", style="solid"];
"src.core.attention.geometric.HyperbolicLogarithm" [color="black", fontcolor="black", label=<src.core.attention.geometric.HyperbolicLogarithm>, shape="record", style="solid"];
"src.core.attention.geometric.ParallelTransport" [color="black", fontcolor="black", label=<src.core.attention.geometric.ParallelTransport>, shape="record", style="solid"];
"src.core.attention.routing.InformationRouter" [color="black", fontcolor="black", label=<src.core.attention.routing.InformationRouter>, shape="record", style="solid"];
"src.core.backends.base.AttentionBackend" [color="black", fontcolor="black", label=<src.core.backends.base.AttentionBackend>, shape="record", style="solid"];
"src.core.common.dimensions.DimensionConfig" [color="black", fontcolor="black", label=<src.core.common.dimensions.DimensionConfig>, shape="record", style="solid"];
"src.core.common.dimensions.DimensionManager" [color="black", fontcolor="black", label=<src.core.common.dimensions.DimensionManager>, shape="record", style="solid"];
"src.core.common.dimensions.GeometricTensor" [color="black", fontcolor="black", label=<src.core.common.dimensions.GeometricTensor>, shape="record", style="solid"];
"src.core.common.dimensions.QuantumTensor" [color="black", fontcolor="black", label=<src.core.common.dimensions.QuantumTensor>, shape="record", style="solid"];
"src.core.crystal.scale.AnomalyDetector" [color="black", fontcolor="black", label=<src.core.crystal.scale.AnomalyDetector>, shape="record", style="solid"];
"src.core.crystal.scale.RenormalizationFlow" [color="black", fontcolor="black", label=<src.core.crystal.scale.RenormalizationFlow>, shape="record", style="solid"];
"src.core.crystal.scale.ScaleCohomology" [color="black", fontcolor="black", label=<src.core.crystal.scale.ScaleCohomology>, shape="record", style="solid"];
"src.core.crystal.scale.ScaleConnection" [color="black", fontcolor="black", label=<src.core.crystal.scale.ScaleConnection>, shape="record", style="solid"];
"src.core.crystal.scale.ScaleInvariance" [color="black", fontcolor="black", label=<src.core.crystal.scale.ScaleInvariance>, shape="record", style="solid"];
"src.core.crystal.scale.ScaleSystem" [color="black", fontcolor="black", label=<src.core.crystal.scale.ScaleSystem>, shape="record", style="solid"];
"src.core.flow.base.BaseGeometricFlow" [color="black", fontcolor="black", label=<src.core.flow.base.BaseGeometricFlow>, shape="record", style="solid"];
"src.core.flow.computation.FlowComputation" [color="black", fontcolor="black", label=<src.core.flow.computation.FlowComputation>, shape="record", style="solid"];
"src.core.flow.higher_order.HigherOrderFlow" [color="black", fontcolor="black", label=<src.core.flow.higher_order.HigherOrderFlow>, shape="record", style="solid"];
"src.core.flow.information_ricci.InformationRicciFlow" [color="black", fontcolor="black", label=<src.core.flow.information_ricci.InformationRicciFlow>, shape="record", style="solid"];
"src.core.flow.neural.NeuralGeometricFlow" [color="black", fontcolor="black", label=<src.core.flow.neural.NeuralGeometricFlow>, shape="record", style="solid"];
"src.core.flow.neural.SingularityInfo" [color="black", fontcolor="black", label=<src.core.flow.neural.SingularityInfo>, shape="record", style="solid"];
"src.core.flow.pattern.PatternFormationFlow" [color="black", fontcolor="black", label=<src.core.flow.pattern.PatternFormationFlow>, shape="record", style="solid"];
"src.core.flow.pattern_heat.PatternHeatFlow" [color="black", fontcolor="black", label=<src.core.flow.pattern_heat.PatternHeatFlow>, shape="record", style="solid"];
"src.core.flow.protocol.FlowMetrics" [color="black", fontcolor="black", label=<src.core.flow.protocol.FlowMetrics>, shape="record", style="solid"];
"src.core.flow.protocol.GeometricFlowProtocol" [color="black", fontcolor="black", label=<src.core.flow.protocol.GeometricFlowProtocol>, shape="record", style="solid"];
"src.core.flow.protocol.QuantumFlowMetrics" [color="black", fontcolor="black", label=<src.core.flow.protocol.QuantumFlowMetrics>, shape="record", style="solid"];
"src.core.flow.protocol.RicciTensorNetwork" [color="black", fontcolor="black", label=<src.core.flow.protocol.RicciTensorNetwork>, shape="record", style="solid"];
"src.core.flow.protocol.SingularityInfo" [color="black", fontcolor="black", label=<src.core.flow.protocol.SingularityInfo>, shape="record", style="solid"];
"src.core.flow.quantum.AnalyzerMetrics" [color="black", fontcolor="black", label=<src.core.flow.quantum.AnalyzerMetrics>, shape="record", style="solid"];
"src.core.flow.quantum.GeometricFlowAnalyzer" [color="black", fontcolor="black", label=<src.core.flow.quantum.GeometricFlowAnalyzer>, shape="record", style="solid"];
"src.core.flow.quantum.QuantumGeometricFlow" [color="black", fontcolor="black", label=<src.core.flow.quantum.QuantumGeometricFlow>, shape="record", style="solid"];
"src.core.initialization.InitializationConfig" [color="black", fontcolor="black", label=<src.core.initialization.InitializationConfig>, shape="record", style="solid"];
"src.core.initialization.InitializationSystem" [color="black", fontcolor="black", label=<src.core.initialization.InitializationSystem>, shape="record", style="solid"];
"src.core.metrics.advanced_metrics.AdvancedMetricsAnalyzer" [color="black", fontcolor="black", label=<src.core.metrics.advanced_metrics.AdvancedMetricsAnalyzer>, shape="record", style="solid"];
"src.core.metrics.advanced_metrics.InformationFlowMetrics" [color="black", fontcolor="black", label=<src.core.metrics.advanced_metrics.InformationFlowMetrics>, shape="record", style="solid"];
"src.core.metrics.evolution.ErgodicAnalysis" [color="black", fontcolor="black", label=<src.core.metrics.evolution.ErgodicAnalysis>, shape="record", style="solid"];
"src.core.metrics.evolution.EvolutionAnalyzer" [color="black", fontcolor="black", label=<src.core.metrics.evolution.EvolutionAnalyzer>, shape="record", style="solid"];
"src.core.metrics.evolution.EvolutionMetrics" [color="black", fontcolor="black", label=<src.core.metrics.evolution.EvolutionMetrics>, shape="record", style="solid"];
"src.core.metrics.evolution.FlowEvolution" [color="black", fontcolor="black", label=<src.core.metrics.evolution.FlowEvolution>, shape="record", style="solid"];
"src.core.metrics.evolution.LFunctionComputation" [color="black", fontcolor="black", label=<src.core.metrics.evolution.LFunctionComputation>, shape="record", style="solid"];
"src.core.metrics.evolution.OrbitAnalysis" [color="black", fontcolor="black", label=<src.core.metrics.evolution.OrbitAnalysis>, shape="record", style="solid"];
"src.core.metrics.height_theory.AdaptiveHeightTheory" [color="black", fontcolor="black", label=<src.core.metrics.height_theory.AdaptiveHeightTheory>, shape="record", style="solid"];
"src.core.metrics.height_theory.HeightStructure" [color="black", fontcolor="black", label=<src.core.metrics.height_theory.HeightStructure>, shape="record", style="solid"];
"src.core.models.base.LayerGeometry" [color="black", fontcolor="black", label=<src.core.models.base.LayerGeometry>, shape="record", style="solid"];
"src.core.models.base.LayerGeometryDict" [color="black", fontcolor="black", label=<src.core.models.base.LayerGeometryDict>, shape="record", style="solid"];
"src.core.models.base.ModelGeometry" [color="black", fontcolor="black", label=<src.core.models.base.ModelGeometry>, shape="record", style="solid"];
"src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" [color="black", fontcolor="black", label=<src.core.patterns.arithmetic_dynamics.ArithmeticDynamics>, shape="record", style="solid"];
"src.core.patterns.arithmetic_dynamics.ArithmeticPattern" [color="black", fontcolor="black", label=<src.core.patterns.arithmetic_dynamics.ArithmeticPattern>, shape="record", style="solid"];
"src.core.patterns.arithmetic_dynamics.ModularFormComputer" [color="black", fontcolor="black", label=<src.core.patterns.arithmetic_dynamics.ModularFormComputer>, shape="record", style="solid"];
"src.core.patterns.base_flow.BaseGeometricFlow" [color="black", fontcolor="black", label=<src.core.patterns.base_flow.BaseGeometricFlow>, shape="record", style="solid"];
"src.core.patterns.cohomology.AdvancedMetricsAnalyzer" [color="black", fontcolor="black", label=<src.core.patterns.cohomology.AdvancedMetricsAnalyzer>, shape="record", style="solid"];
"src.core.patterns.cohomology.ArithmeticForm" [color="black", fontcolor="black", label=<src.core.patterns.cohomology.ArithmeticForm>, shape="record", style="solid"];
"src.core.patterns.cohomology.CohomologyGroup" [color="black", fontcolor="black", label=<src.core.patterns.cohomology.CohomologyGroup>, shape="record", style="solid"];
"src.core.patterns.cohomology.DeRhamCohomology" [color="black", fontcolor="black", label=<src.core.patterns.cohomology.DeRhamCohomology>, shape="record", style="solid"];
"src.core.patterns.cohomology.FiberBundle" [color="black", fontcolor="black", label=<src.core.patterns.cohomology.FiberBundle>, shape="record", style="solid"];
"src.core.patterns.cohomology.HeightStructure" [color="black", fontcolor="black", label=<src.core.patterns.cohomology.HeightStructure>, shape="record", style="solid"];
"src.core.patterns.cohomology.Integration" [color="black", fontcolor="black", label=<src.core.patterns.cohomology.Integration>, shape="record", style="solid"];
"src.core.patterns.cohomology.MotivicCohomology" [color="black", fontcolor="black", label=<src.core.patterns.cohomology.MotivicCohomology>, shape="record", style="solid"];
"src.core.patterns.cohomology.QuantumMotivicCohomology" [color="black", fontcolor="black", label=<src.core.patterns.cohomology.QuantumMotivicCohomology>, shape="record", style="solid"];
"src.core.patterns.cohomology.RiemannianFiberBundle" [color="black", fontcolor="black", label=<src.core.patterns.cohomology.RiemannianFiberBundle>, shape="record", style="solid"];
"src.core.patterns.dynamics.PatternDynamics" [color="black", fontcolor="black", label=<src.core.patterns.dynamics.PatternDynamics>, shape="record", style="solid"];
"src.core.patterns.enriched_structure.EnrichedMorphism" [color="black", fontcolor="black", label=<src.core.patterns.enriched_structure.EnrichedMorphism>, shape="record", style="solid"];
"src.core.patterns.enriched_structure.EnrichedTransition" [color="black", fontcolor="black", label=<src.core.patterns.enriched_structure.EnrichedTransition>, shape="record", style="solid"];
"src.core.patterns.enriched_structure.PatternTransition" [color="black", fontcolor="black", label=<src.core.patterns.enriched_structure.PatternTransition>, shape="record", style="solid"];
"src.core.patterns.enriched_structure.WaveEmergence" [color="black", fontcolor="black", label=<src.core.patterns.enriched_structure.WaveEmergence>, shape="record", style="solid"];
"src.core.patterns.evolution.PatternEvolution" [color="black", fontcolor="black", label=<src.core.patterns.evolution.PatternEvolution>, shape="record", style="solid"];
"src.core.patterns.evolution.PatternEvolutionMetrics" [color="black", fontcolor="black", label=<src.core.patterns.evolution.PatternEvolutionMetrics>, shape="record", style="solid"];
"src.core.patterns.fiber_bundle.BaseFiberBundle" [color="black", fontcolor="black", label=<src.core.patterns.fiber_bundle.BaseFiberBundle>, shape="record", style="solid"];
"src.core.patterns.fiber_types.FiberBundle" [color="black", fontcolor="black", label=<src.core.patterns.fiber_types.FiberBundle>, shape="record", style="solid"];
"src.core.patterns.fiber_types.FiberChart" [color="black", fontcolor="black", label=<src.core.patterns.fiber_types.FiberChart>, shape="record", style="solid"];
"src.core.patterns.fiber_types.FiberType" [color="black", fontcolor="black", label=<src.core.patterns.fiber_types.FiberType>, shape="record", style="solid"];
"src.core.patterns.fiber_types.FiberTypeManager" [color="black", fontcolor="black", label=<src.core.patterns.fiber_types.FiberTypeManager>, shape="record", style="solid"];
"src.core.patterns.fiber_types.LocalChart" [color="black", fontcolor="black", label=<src.core.patterns.fiber_types.LocalChart>, shape="record", style="solid"];
"src.core.patterns.formation.BifurcationAnalyzer" [color="black", fontcolor="black", label=<src.core.patterns.formation.BifurcationAnalyzer>, shape="record", style="solid"];
"src.core.patterns.formation.BifurcationMetrics" [color="black", fontcolor="black", label=<src.core.patterns.formation.BifurcationMetrics>, shape="record", style="solid"];
"src.core.patterns.formation.PatternFormation" [color="black", fontcolor="black", label=<src.core.patterns.formation.PatternFormation>, shape="record", style="solid"];
"src.core.patterns.motivic_integration.MotivicIntegrationSystem" [color="black", fontcolor="black", label=<src.core.patterns.motivic_integration.MotivicIntegrationSystem>, shape="record", style="solid"];
"src.core.patterns.motivic_integration.MotivicIntegrator" [color="black", fontcolor="black", label=<src.core.patterns.motivic_integration.MotivicIntegrator>, shape="record", style="solid"];
"src.core.patterns.motivic_riemannian.MotivicChristoffelSymbols" [color="black", fontcolor="black", label=<src.core.patterns.motivic_riemannian.MotivicChristoffelSymbols>, shape="record", style="solid"];
"src.core.patterns.motivic_riemannian.MotivicCurvatureTensor" [color="black", fontcolor="black", label=<src.core.patterns.motivic_riemannian.MotivicCurvatureTensor>, shape="record", style="solid"];
"src.core.patterns.motivic_riemannian.MotivicMetricTensor" [color="black", fontcolor="black", label=<src.core.patterns.motivic_riemannian.MotivicMetricTensor>, shape="record", style="solid"];
"src.core.patterns.motivic_riemannian.MotivicRiemannianStructure" [color="black", fontcolor="black", label=<src.core.patterns.motivic_riemannian.MotivicRiemannianStructure>, shape="record", style="solid"];
"src.core.patterns.motivic_riemannian_impl.MotivicRiemannianStructureImpl" [color="black", fontcolor="black", label=<src.core.patterns.motivic_riemannian_impl.MotivicRiemannianStructureImpl>, shape="record", style="solid"];
"src.core.patterns.operadic_handler.OperadicStructureHandler" [color="black", fontcolor="black", label=<src.core.patterns.operadic_handler.OperadicStructureHandler>, shape="record", style="solid"];
"src.core.patterns.operadic_structure.AttentionOperad" [color="black", fontcolor="black", label=<src.core.patterns.operadic_structure.AttentionOperad>, shape="record", style="solid"];
"src.core.patterns.operadic_structure.EnrichedAttention" [color="black", fontcolor="black", label=<src.core.patterns.operadic_structure.EnrichedAttention>, shape="record", style="solid"];
"src.core.patterns.operadic_structure.OperadicComposition" [color="black", fontcolor="black", label=<src.core.patterns.operadic_structure.OperadicComposition>, shape="record", style="solid"];
"src.core.patterns.operadic_structure.OperadicOperation" [color="black", fontcolor="black", label=<src.core.patterns.operadic_structure.OperadicOperation>, shape="record", style="solid"];
"src.core.patterns.pattern_processor.PatternProcessor" [color="black", fontcolor="black", label=<src.core.patterns.pattern_processor.PatternProcessor>, shape="record", style="solid"];
"src.core.patterns.riemannian.BaseRiemannianStructure" [color="black", fontcolor="black", label=<src.core.patterns.riemannian.BaseRiemannianStructure>, shape="record", style="solid"];
"src.core.patterns.riemannian.PatternRiemannianStructure" [color="black", fontcolor="black", label=<src.core.patterns.riemannian.PatternRiemannianStructure>, shape="record", style="solid"];
"src.core.patterns.riemannian.RiemannianFramework" [color="black", fontcolor="black", label=<src.core.patterns.riemannian.RiemannianFramework>, shape="record", style="solid"];
"src.core.patterns.riemannian_base.ChristoffelSymbols" [color="black", fontcolor="black", label=<src.core.patterns.riemannian_base.ChristoffelSymbols>, shape="record", style="solid"];
"src.core.patterns.riemannian_base.CurvatureTensor" [color="black", fontcolor="black", label=<src.core.patterns.riemannian_base.CurvatureTensor>, shape="record", style="solid"];
"src.core.patterns.riemannian_base.MetricTensor" [color="black", fontcolor="black", label=<src.core.patterns.riemannian_base.MetricTensor>, shape="record", style="solid"];
"src.core.patterns.riemannian_base.RiemannianStructure" [color="black", fontcolor="black", label=<src.core.patterns.riemannian_base.RiemannianStructure>, shape="record", style="solid"];
"src.core.patterns.riemannian_base.RiemannianValidator" [color="black", fontcolor="black", label=<src.core.patterns.riemannian_base.RiemannianValidator>, shape="record", style="solid"];
"src.core.patterns.riemannian_base.ValidationMixin" [color="black", fontcolor="black", label=<src.core.patterns.riemannian_base.ValidationMixin>, shape="record", style="solid"];
"src.core.patterns.riemannian_flow.RiemannianFlow" [color="black", fontcolor="black", label=<src.core.patterns.riemannian_flow.RiemannianFlow>, shape="record", style="solid"];
"src.core.patterns.symplectic.EnrichedOperator" [color="black", fontcolor="black", label=<src.core.patterns.symplectic.EnrichedOperator>, shape="record", style="solid"];
"src.core.patterns.symplectic.SymplecticForm" [color="black", fontcolor="black", label=<src.core.patterns.symplectic.SymplecticForm>, shape="record", style="solid"];
"src.core.patterns.symplectic.SymplecticStructure" [color="black", fontcolor="black", label=<src.core.patterns.symplectic.SymplecticStructure>, shape="record", style="solid"];
"src.core.patterns.symplectic.WaveOperator" [color="black", fontcolor="black", label=<src.core.patterns.symplectic.WaveOperator>, shape="record", style="solid"];
"src.core.performance.cpu.algorithms.AlgorithmMetrics" [color="black", fontcolor="black", label=<src.core.performance.cpu.algorithms.AlgorithmMetrics>, shape="record", style="solid"];
"src.core.performance.cpu.algorithms.AlgorithmOptimizer" [color="black", fontcolor="black", label=<src.core.performance.cpu.algorithms.AlgorithmOptimizer>, shape="record", style="solid"];
"src.core.performance.cpu.algorithms.BranchOptimizer" [color="black", fontcolor="black", label=<src.core.performance.cpu.algorithms.BranchOptimizer>, shape="record", style="solid"];
"src.core.performance.cpu.algorithms.FastPathDict" [color="black", fontcolor="black", label=<src.core.performance.cpu.algorithms.FastPathDict>, shape="record", style="solid"];
"src.core.performance.cpu.algorithms.FastPathOptimizer" [color="black", fontcolor="black", label=<src.core.performance.cpu.algorithms.FastPathOptimizer>, shape="record", style="solid"];
"src.core.performance.cpu.algorithms.InstructionCounter" [color="black", fontcolor="black", label=<src.core.performance.cpu.algorithms.InstructionCounter>, shape="record", style="solid"];
"src.core.performance.cpu.algorithms.LoopOptimizer" [color="black", fontcolor="black", label=<src.core.performance.cpu.algorithms.LoopOptimizer>, shape="record", style="solid"];
"src.core.performance.cpu.algorithms.NumericalOptimizer" [color="black", fontcolor="black", label=<src.core.performance.cpu.algorithms.NumericalOptimizer>, shape="record", style="solid"];
"src.core.performance.cpu.memory.CacheOptimizer" [color="black", fontcolor="black", label=<src.core.performance.cpu.memory.CacheOptimizer>, shape="record", style="solid"];
"src.core.performance.cpu.memory.MemoryManager" [color="black", fontcolor="black", label=<src.core.performance.cpu.memory.MemoryManager>, shape="record", style="solid"];
"src.core.performance.cpu.memory.MemoryPool" [color="black", fontcolor="black", label=<src.core.performance.cpu.memory.MemoryPool>, shape="record", style="solid"];
"src.core.performance.cpu.memory.MemoryStats" [color="black", fontcolor="black", label=<src.core.performance.cpu.memory.MemoryStats>, shape="record", style="solid"];
"src.core.performance.cpu.memory_management.MemoryManager" [color="black", fontcolor="black", label=<src.core.performance.cpu.memory_management.MemoryManager>, shape="record", style="solid"];
"src.core.performance.cpu.memory_management.MemoryMetrics" [color="black", fontcolor="black", label=<src.core.performance.cpu.memory_management.MemoryMetrics>, shape="record", style="solid"];
"src.core.performance.cpu.vectorization.VectorizationMetrics" [color="black", fontcolor="black", label=<src.core.performance.cpu.vectorization.VectorizationMetrics>, shape="record", style="solid"];
"src.core.performance.cpu.vectorization.VectorizationOptimizer" [color="black", fontcolor="black", label=<src.core.performance.cpu.vectorization.VectorizationOptimizer>, shape="record", style="solid"];
"src.core.performance.cpu_memory.CPUMemoryManager" [color="black", fontcolor="black", label=<src.core.performance.cpu_memory.CPUMemoryManager>, shape="record", style="solid"];
"src.core.performance.cpu_optimizer.CPUOptimizer" [color="black", fontcolor="black", label=<src.core.performance.cpu_optimizer.CPUOptimizer>, shape="record", style="solid"];
"src.core.performance.cpu_optimizer.PerformanceMetrics" [color="black", fontcolor="black", label=<src.core.performance.cpu_optimizer.PerformanceMetrics>, shape="record", style="solid"];
"src.core.performance.memory_base.MemoryError" [color="black", fontcolor="red", label=<src.core.performance.memory_base.MemoryError>, shape="record", style="solid"];
"src.core.performance.memory_base.MemoryManagerBase" [color="black", fontcolor="black", label=<src.core.performance.memory_base.MemoryManagerBase>, shape="record", style="solid"];
"src.core.performance.memory_base.MemoryMetrics" [color="black", fontcolor="black", label=<src.core.performance.memory_base.MemoryMetrics>, shape="record", style="solid"];
"src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [color="black", fontcolor="black", label=<src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge>, shape="record", style="solid"];
"src.core.quantum.state_space.HilbertSpace" [color="black", fontcolor="black", label=<src.core.quantum.state_space.HilbertSpace>, shape="record", style="solid"];
"src.core.scale_transition.ScaleFlowIntegrator" [color="black", fontcolor="black", label=<src.core.scale_transition.ScaleFlowIntegrator>, shape="record", style="solid"];
"src.core.scale_transition.ScaleTransitionConfig" [color="black", fontcolor="black", label=<src.core.scale_transition.ScaleTransitionConfig>, shape="record", style="solid"];
"src.core.scale_transition.ScaleTransitionLayer" [color="black", fontcolor="black", label=<src.core.scale_transition.ScaleTransitionLayer>, shape="record", style="solid"];
"src.core.scale_transition.ScaleTransitionSystem" [color="black", fontcolor="black", label=<src.core.scale_transition.ScaleTransitionSystem>, shape="record", style="solid"];
"src.core.tiling.components.config.TilingConfig" [color="black", fontcolor="black", label=<src.core.tiling.components.config.TilingConfig>, shape="record", style="solid"];
"src.core.tiling.config.GeometricFlowConfig" [color="black", fontcolor="black", label=<src.core.tiling.config.GeometricFlowConfig>, shape="record", style="solid"];
"src.core.tiling.geometric_flow.GeometricFlow" [color="black", fontcolor="black", label=<src.core.tiling.geometric_flow.GeometricFlow>, shape="record", style="solid"];
"src.core.tiling.optimization.parameter_manager.AdaptiveParameterManager" [color="black", fontcolor="black", label=<src.core.tiling.optimization.parameter_manager.AdaptiveParameterManager>, shape="record", style="solid"];
"src.core.tiling.optimization.parameter_manager.ParameterMonitor" [color="black", fontcolor="black", label=<src.core.tiling.optimization.parameter_manager.ParameterMonitor>, shape="record", style="solid"];
"src.core.tiling.patterns.pattern_fiber_bundle.BundleConfig" [color="black", fontcolor="black", label=<src.core.tiling.patterns.pattern_fiber_bundle.BundleConfig>, shape="record", style="solid"];
"src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [color="black", fontcolor="black", label=<src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle>, shape="record", style="solid"];
"src.core.tiling.patterns.pattern_fiber_bundle.TensorStateContext" [color="black", fontcolor="black", label=<src.core.tiling.patterns.pattern_fiber_bundle.TensorStateContext>, shape="record", style="solid"];
"src.core.tiling.patterns.pattern_fiber_bundle.TensorStateManager" [color="black", fontcolor="black", label=<src.core.tiling.patterns.pattern_fiber_bundle.TensorStateManager>, shape="record", style="solid"];
"src.core.tiling.quantum_attention_tile.AttentionResult" [color="black", fontcolor="black", label=<src.core.tiling.quantum_attention_tile.AttentionResult>, shape="record", style="solid"];
"src.core.tiling.quantum_attention_tile.LoadBalancer" [color="black", fontcolor="black", label=<src.core.tiling.quantum_attention_tile.LoadBalancer>, shape="record", style="solid"];
"src.core.tiling.quantum_attention_tile.LoadProfile" [color="black", fontcolor="black", label=<src.core.tiling.quantum_attention_tile.LoadProfile>, shape="record", style="solid"];
"src.core.tiling.quantum_attention_tile.QuantumMotivicTile" [color="black", fontcolor="black", label=<src.core.tiling.quantum_attention_tile.QuantumMotivicTile>, shape="record", style="solid"];
"src.core.tiling.quantum_geometric_attention.AttentionMetrics" [color="black", fontcolor="black", label=<src.core.tiling.quantum_geometric_attention.AttentionMetrics>, shape="record", style="solid"];
"src.core.tiling.quantum_geometric_attention.AttentionState" [color="black", fontcolor="black", label=<src.core.tiling.quantum_geometric_attention.AttentionState>, shape="record", style="solid"];
"src.core.tiling.quantum_geometric_attention.FlowMetrics" [color="black", fontcolor="black", label=<src.core.tiling.quantum_geometric_attention.FlowMetrics>, shape="record", style="solid"];
"src.core.tiling.quantum_geometric_attention.GeometricStructures" [color="black", fontcolor="black", label=<src.core.tiling.quantum_geometric_attention.GeometricStructures>, shape="record", style="solid"];
"src.core.tiling.quantum_geometric_attention.PatternDynamics" [color="black", fontcolor="black", label=<src.core.tiling.quantum_geometric_attention.PatternDynamics>, shape="record", style="solid"];
"src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [color="black", fontcolor="black", label=<src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention>, shape="record", style="solid"];
"src.core.tiling.quantum_geometric_attention.QuantumGeometricTransformer" [color="black", fontcolor="black", label=<src.core.tiling.quantum_geometric_attention.QuantumGeometricTransformer>, shape="record", style="solid"];
"src.core.tiling.state_manager.StateConfig" [color="black", fontcolor="black", label=<src.core.tiling.state_manager.StateConfig>, shape="record", style="solid"];
"src.core.tiling.state_manager.StateManager" [color="black", fontcolor="black", label=<src.core.tiling.state_manager.StateManager>, shape="record", style="solid"];
"src.core.tiling.state_manager.StateType" [color="black", fontcolor="black", label=<src.core.tiling.state_manager.StateType>, shape="record", style="solid"];
"src.core.types.FiberBundleProtocol" [color="black", fontcolor="black", label=<src.core.types.FiberBundleProtocol>, shape="record", style="solid"];
"src.core.types.GeometricFlowProtocol" [color="black", fontcolor="black", label=<src.core.types.GeometricFlowProtocol>, shape="record", style="solid"];
"src.core.types.PatternState" [color="black", fontcolor="black", label=<src.core.types.PatternState>, shape="record", style="solid"];
"src.core.types.RiemannianMetric" [color="black", fontcolor="black", label=<src.core.types.RiemannianMetric>, shape="record", style="solid"];
"src.infrastructure.base.CPUDevice" [color="black", fontcolor="black", label=<src.infrastructure.base.CPUDevice>, shape="record", style="solid"];
"src.infrastructure.base.CPUOptimizer" [color="black", fontcolor="black", label=<src.infrastructure.base.CPUOptimizer>, shape="record", style="solid"];
"src.infrastructure.base.InfrastructureMetrics" [color="black", fontcolor="black", label=<src.infrastructure.base.InfrastructureMetrics>, shape="record", style="solid"];
"src.infrastructure.base.MemoryManager" [color="black", fontcolor="black", label=<src.infrastructure.base.MemoryManager>, shape="record", style="solid"];
"src.infrastructure.base.MemoryStats" [color="black", fontcolor="black", label=<src.infrastructure.base.MemoryStats>, shape="record", style="solid"];
"src.infrastructure.base.MemoryManager.optimize.OptimizeContext" [color="black", fontcolor="black", label=<src.infrastructure.base.OptimizeContext>, shape="record", style="solid"];
"src.infrastructure.base.ParallelProcessor" [color="black", fontcolor="black", label=<src.infrastructure.base.ParallelProcessor>, shape="record", style="solid"];
"src.infrastructure.base.CPUOptimizer.profile.ProfileContext" [color="black", fontcolor="black", label=<src.infrastructure.base.ProfileContext>, shape="record", style="solid"];
"src.infrastructure.base.ResourceAllocationError" [color="black", fontcolor="red", label=<src.infrastructure.base.ResourceAllocationError>, shape="record", style="solid"];
"src.infrastructure.base.ResourceAllocator" [color="black", fontcolor="black", label=<src.infrastructure.base.ResourceAllocator>, shape="record", style="solid"];
"src.infrastructure.cpu_optimizer.CPUOptimizer" [color="black", fontcolor="black", label=<src.infrastructure.cpu_optimizer.CPUOptimizer>, shape="record", style="solid"];
"src.infrastructure.memory_manager.MemoryManager" [color="black", fontcolor="black", label=<src.infrastructure.memory_manager.MemoryManager>, shape="record", style="solid"];
"src.infrastructure.metrics.InfrastructureMetrics" [color="black", fontcolor="black", label=<src.infrastructure.metrics.InfrastructureMetrics>, shape="record", style="solid"];
"src.infrastructure.metrics.PerformanceMetrics" [color="black", fontcolor="black", label=<src.infrastructure.metrics.PerformanceMetrics>, shape="record", style="solid"];
"src.infrastructure.metrics.ResourceMetrics" [color="black", fontcolor="black", label=<src.infrastructure.metrics.ResourceMetrics>, shape="record", style="solid"];
"src.infrastructure.parallel.ParallelProcessor" [color="black", fontcolor="black", label=<src.infrastructure.parallel.ParallelProcessor>, shape="record", style="solid"];
"src.infrastructure.resource.ResourceAllocator" [color="black", fontcolor="black", label=<src.infrastructure.resource.ResourceAllocator>, shape="record", style="solid"];
"src.metrics.load_analyzer.LoadBalanceAnalyzer" [color="black", fontcolor="black", label=<src.metrics.load_analyzer.LoadBalanceAnalyzer>, shape="record", style="solid"];
"src.metrics.metrics_tracker.MetricsTracker" [color="black", fontcolor="black", label=<src.metrics.metrics_tracker.MetricsTracker>, shape="record", style="solid"];
"src.metrics.quantum_geometric_metrics.ArithmeticMetrics" [color="black", fontcolor="black", label=<src.metrics.quantum_geometric_metrics.ArithmeticMetrics>, shape="record", style="solid"];
"src.metrics.quantum_geometric_metrics.BaseMetric" [color="black", fontcolor="black", label=<src.metrics.quantum_geometric_metrics.BaseMetric>, shape="record", style="solid"];
"src.metrics.quantum_geometric_metrics.GeometricMetrics" [color="black", fontcolor="black", label=<src.metrics.quantum_geometric_metrics.GeometricMetrics>, shape="record", style="solid"];
"src.metrics.quantum_geometric_metrics.MetricContext" [color="black", fontcolor="black", label=<src.metrics.quantum_geometric_metrics.MetricContext>, shape="record", style="solid"];
"src.metrics.quantum_geometric_metrics.MetricDomain" [color="black", fontcolor="black", label=<src.metrics.quantum_geometric_metrics.MetricDomain>, shape="record", style="solid"];
"src.metrics.quantum_geometric_metrics.PatternMetrics" [color="black", fontcolor="black", label=<src.metrics.quantum_geometric_metrics.PatternMetrics>, shape="record", style="solid"];
"src.metrics.quantum_geometric_metrics.QuantumMetrics" [color="black", fontcolor="black", label=<src.metrics.quantum_geometric_metrics.QuantumMetrics>, shape="record", style="solid"];
"src.metrics.quantum_geometric_metrics.UnifiedMetrics" [color="black", fontcolor="black", label=<src.metrics.quantum_geometric_metrics.UnifiedMetrics>, shape="record", style="solid"];
"src.metrics.quantum_metrics.QuantumMetrics" [color="black", fontcolor="black", label=<src.metrics.quantum_metrics.QuantumMetrics>, shape="record", style="solid"];
"src.metrics.synthetic_data.SyntheticDataGenerator" [color="black", fontcolor="black", label=<src.metrics.synthetic_data.SyntheticDataGenerator>, shape="record", style="solid"];
"src.neural.attention.pattern.diffusion.DiffusionSystem" [color="black", fontcolor="black", label=<src.neural.attention.pattern.diffusion.DiffusionSystem>, shape="record", style="solid"];
"src.neural.attention.pattern.dynamics.PatternDynamics" [color="black", fontcolor="black", label=<src.neural.attention.pattern.dynamics.PatternDynamics>, shape="record", style="solid"];
"src.neural.attention.pattern.quantum.QuantumGeometricTensor" [color="black", fontcolor="black", label=<src.neural.attention.pattern.quantum.QuantumGeometricTensor>, shape="record", style="solid"];
"src.neural.attention.pattern.reaction.ReactionSystem" [color="black", fontcolor="black", label=<src.neural.attention.pattern.reaction.ReactionSystem>, shape="record", style="solid"];
"src.neural.attention.pattern.stability.StabilityAnalyzer" [color="black", fontcolor="black", label=<src.neural.attention.pattern.stability.StabilityAnalyzer>, shape="record", style="solid"];
"src.neural.flow.hamiltonian.HamiltonianSystem" [color="black", fontcolor="black", label=<src.neural.flow.hamiltonian.HamiltonianSystem>, shape="record", style="solid"];
"src.utils.memory_management.MemoryOptimizer" [color="black", fontcolor="black", label=<src.utils.memory_management.MemoryOptimizer>, shape="record", style="solid"];
"src.utils.memory_management.TensorManager" [color="black", fontcolor="black", label=<src.utils.memory_management.TensorManager>, shape="record", style="solid"];
"src.validation.base.BasicValidationResult" [color="black", fontcolor="black", label=<src.validation.base.BasicValidationResult>, shape="record", style="solid"];
"src.validation.base.ValidationResult" [color="black", fontcolor="black", label=<src.validation.base.ValidationResult>, shape="record", style="solid"];
"src.validation.flow.stability.LinearStabilityValidator" [color="black", fontcolor="black", label=<src.validation.flow.stability.LinearStabilityValidator>, shape="record", style="solid"];
"src.validation.flow.stability.NonlinearStabilityValidator" [color="black", fontcolor="black", label=<src.validation.flow.stability.NonlinearStabilityValidator>, shape="record", style="solid"];
"src.validation.flow.stability.StructuralStabilityValidator" [color="black", fontcolor="black", label=<src.validation.flow.stability.StructuralStabilityValidator>, shape="record", style="solid"];
"src.validation.framework.ConcreteValidationResult" [color="black", fontcolor="black", label=<src.validation.framework.ConcreteValidationResult>, shape="record", style="solid"];
"src.validation.framework.FrameworkValidationResult" [color="black", fontcolor="black", label=<src.validation.framework.FrameworkValidationResult>, shape="record", style="solid"];
"src.validation.framework.ValidationFramework" [color="black", fontcolor="black", label=<src.validation.framework.ValidationFramework>, shape="record", style="solid"];
"src.validation.framework.ValidationProtocol" [color="black", fontcolor="black", label=<src.validation.framework.ValidationProtocol>, shape="record", style="solid"];
"src.validation.geometric.model.ModelGeometricValidator" [color="black", fontcolor="black", label=<src.validation.geometric.model.ModelGeometricValidator>, shape="record", style="solid"];
"src.validation.geometric.symplectic.OperadicValidator" [color="black", fontcolor="black", label=<src.validation.geometric.symplectic.OperadicValidator>, shape="record", style="solid"];
"src.validation.geometric.symplectic.QuantumGeometricValidator" [color="black", fontcolor="black", label=<src.validation.geometric.symplectic.QuantumGeometricValidator>, shape="record", style="solid"];
"src.validation.geometric.symplectic.SymplecticStructureValidator" [color="black", fontcolor="black", label=<src.validation.geometric.symplectic.SymplecticStructureValidator>, shape="record", style="solid"];
"src.validation.geometric.symplectic.WavePacketValidator" [color="black", fontcolor="black", label=<src.validation.geometric.symplectic.WavePacketValidator>, shape="record", style="solid"];
"src.validation.patterns.stability.PatternValidator" [color="black", fontcolor="black", label=<src.validation.patterns.stability.PatternValidator>, shape="record", style="solid"];
"src.validation.quantum.evolution.AdiabaticValidation" [color="black", fontcolor="black", label=<src.validation.quantum.evolution.AdiabaticValidation>, shape="record", style="solid"];
"src.validation.quantum.evolution.AdiabaticValidator" [color="black", fontcolor="black", label=<src.validation.quantum.evolution.AdiabaticValidator>, shape="record", style="solid"];
"src.validation.quantum.evolution.DecoherenceValidation" [color="black", fontcolor="black", label=<src.validation.quantum.evolution.DecoherenceValidation>, shape="record", style="solid"];
"src.validation.quantum.evolution.DecoherenceValidator" [color="black", fontcolor="black", label=<src.validation.quantum.evolution.DecoherenceValidator>, shape="record", style="solid"];
"src.validation.quantum.evolution.QuantumEvolutionValidator" [color="black", fontcolor="black", label=<src.validation.quantum.evolution.QuantumEvolutionValidator>, shape="record", style="solid"];
"src.validation.quantum.evolution.UnitaryValidation" [color="black", fontcolor="black", label=<src.validation.quantum.evolution.UnitaryValidation>, shape="record", style="solid"];
"src.validation.quantum.evolution.UnitaryValidator" [color="black", fontcolor="black", label=<src.validation.quantum.evolution.UnitaryValidator>, shape="record", style="solid"];
"src.validation.quantum.state.DensityMatrixValidation" [color="black", fontcolor="black", label=<src.validation.quantum.state.DensityMatrixValidation>, shape="record", style="solid"];
"src.validation.quantum.state.DensityMatrixValidator" [color="black", fontcolor="black", label=<src.validation.quantum.state.DensityMatrixValidator>, shape="record", style="solid"];
"src.validation.quantum.state.EntanglementMetrics" [color="black", fontcolor="black", label=<src.validation.quantum.state.EntanglementMetrics>, shape="record", style="solid"];
"src.validation.quantum.state.QuantumStateValidationResult" [color="black", fontcolor="black", label=<src.validation.quantum.state.QuantumStateValidationResult>, shape="record", style="solid"];
"src.validation.quantum.state.QuantumStateValidator" [color="black", fontcolor="black", label=<src.validation.quantum.state.QuantumStateValidator>, shape="record", style="solid"];
"src.validation.quantum.state.StatePreparationValidation" [color="black", fontcolor="black", label=<src.validation.quantum.state.StatePreparationValidation>, shape="record", style="solid"];
"src.validation.quantum.state.StatePreparationValidator" [color="black", fontcolor="black", label=<src.validation.quantum.state.StatePreparationValidator>, shape="record", style="solid"];
"src.validation.quantum.state.StateProperties" [color="black", fontcolor="black", label=<src.validation.quantum.state.StateProperties>, shape="record", style="solid"];
"src.validation.quantum.state.StateValidationErrorType" [color="black", fontcolor="black", label=<src.validation.quantum.state.StateValidationErrorType>, shape="record", style="solid"];
"src.validation.quantum.state.StateValidator" [color="black", fontcolor="black", label=<src.validation.quantum.state.StateValidator>, shape="record", style="solid"];
"src.validation.quantum.state.TomographyValidation" [color="black", fontcolor="black", label=<src.validation.quantum.state.TomographyValidation>, shape="record", style="solid"];
"src.validation.quantum.state.TomographyValidator" [color="black", fontcolor="black", label=<src.validation.quantum.state.TomographyValidator>, shape="record", style="solid"];
"src.validation.quantum.state.UncertaintyMetrics" [color="black", fontcolor="black", label=<src.validation.quantum.state.UncertaintyMetrics>, shape="record", style="solid"];
"torch._C.Size" [color="black", fontcolor="black", label=<torch._C.Size>, shape="record", style="solid"];
"torch._C.TensorBase" [color="black", fontcolor="black", label=<torch._C.TensorBase>, shape="record", style="solid"];
"torch._C.device" [color="black", fontcolor="black", label=<torch._C.device>, shape="record", style="solid"];
"torch._C.dtype" [color="black", fontcolor="black", label=<torch._C.dtype>, shape="record", style="solid"];
"torch._C.layout" [color="black", fontcolor="black", label=<torch._C.layout>, shape="record", style="solid"];
"torch._dynamo.eval_frame.OptimizedModule" [color="black", fontcolor="black", label=<torch._dynamo.eval_frame.OptimizedModule>, shape="record", style="solid"];
"torch._tensor.Tensor" [color="black", fontcolor="black", label=<torch._tensor.Tensor>, shape="record", style="solid"];
"torch.nn.modules.container.ModuleDict" [color="black", fontcolor="black", label=<torch.nn.modules.container.ModuleDict>, shape="record", style="solid"];
"torch.nn.modules.container.ModuleList" [color="black", fontcolor="black", label=<torch.nn.modules.container.ModuleList>, shape="record", style="solid"];
"torch.nn.modules.container.Sequential" [color="black", fontcolor="black", label=<torch.nn.modules.container.Sequential>, shape="record", style="solid"];
"torch.nn.modules.dropout.Dropout" [color="black", fontcolor="black", label=<torch.nn.modules.dropout.Dropout>, shape="record", style="solid"];
"torch.nn.modules.dropout._DropoutNd" [color="black", fontcolor="black", label=<torch.nn.modules.dropout._DropoutNd>, shape="record", style="solid"];
"torch.nn.modules.linear.Linear" [color="black", fontcolor="black", label=<torch.nn.modules.linear.Linear>, shape="record", style="solid"];
"torch.nn.modules.module.Module" [color="black", fontcolor="black", label=<torch.nn.modules.module.Module>, shape="record", style="solid"];
"torch.nn.modules.normalization.LayerNorm" [color="black", fontcolor="black", label=<torch.nn.modules.normalization.LayerNorm>, shape="record", style="solid"];
"torch.nn.modules.rnn.GRU" [color="black", fontcolor="black", label=<torch.nn.modules.rnn.GRU>, shape="record", style="solid"];
"torch.nn.modules.rnn.RNNBase" [color="black", fontcolor="black", label=<torch.nn.modules.rnn.RNNBase>, shape="record", style="solid"];
"torch.nn.parameter.Parameter" [color="black", fontcolor="black", label=<torch.nn.parameter.Parameter>, shape="record", style="solid"];
"torch.optim.adam.Adam" [color="black", fontcolor="black", label=<torch.optim.adam.Adam>, shape="record", style="solid"];
"torch.optim.optimizer.Optimizer" [color="black", fontcolor="black", label=<torch.optim.optimizer.Optimizer>, shape="record", style="solid"];
"typing_extensions.Protocol" [color="black", fontcolor="black", label=<typing_extensions.Protocol>, shape="record", style="solid"];
"typing_extensions._ExtensionsSpecialForm" [color="black", fontcolor="black", label=<typing_extensions._ExtensionsSpecialForm>, shape="record", style="solid"];
"src.core.attention.compute.AttentionCompute" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.attention.geometric.EuclideanExponential" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.attention.geometric.EuclideanLogarithm" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.attention.geometric.GeometricStructures" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.attention.geometric.HyperbolicExponential" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.attention.geometric.HyperbolicLogarithm" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.attention.geometric.ParallelTransport" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.attention.routing.InformationRouter" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.common.dimensions.DimensionManager" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.common.dimensions.GeometricTensor" -> "torch._tensor.Tensor" [arrowhead="empty", arrowtail="none"];
"src.core.common.dimensions.QuantumTensor" -> "torch._tensor.Tensor" [arrowhead="empty", arrowtail="none"];
"src.core.flow.base.BaseGeometricFlow" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.flow.higher_order.HigherOrderFlow" -> "src.core.flow.pattern_heat.PatternHeatFlow" [arrowhead="empty", arrowtail="none"];
"src.core.flow.information_ricci.InformationRicciFlow" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="empty", arrowtail="none"];
"src.core.flow.neural.NeuralGeometricFlow" -> "src.core.flow.pattern.PatternFormationFlow" [arrowhead="empty", arrowtail="none"];
"src.core.flow.pattern.PatternFormationFlow" -> "src.core.flow.base.BaseGeometricFlow" [arrowhead="empty", arrowtail="none"];
"src.core.flow.pattern_heat.PatternHeatFlow" -> "src.core.flow.information_ricci.InformationRicciFlow" [arrowhead="empty", arrowtail="none"];
"src.core.flow.protocol.QuantumFlowMetrics" -> "src.core.flow.protocol.FlowMetrics" [arrowhead="empty", arrowtail="none"];
"src.core.flow.protocol.RicciTensorNetwork" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.flow.quantum.QuantumGeometricFlow" -> "src.core.flow.base.BaseGeometricFlow" [arrowhead="empty", arrowtail="none"];
"src.core.initialization.InitializationSystem" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.models.base.LayerGeometry" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.models.base.LayerGeometryDict" -> "torch.nn.modules.container.ModuleDict" [arrowhead="empty", arrowtail="none"];
"src.core.models.base.ModelGeometry" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.arithmetic_dynamics.ArithmeticPattern" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.arithmetic_dynamics.ModularFormComputer" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.base_flow.BaseGeometricFlow" -> "src.core.types.GeometricFlowProtocol" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.base_flow.BaseGeometricFlow" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.cohomology.RiemannianFiberBundle" -> "src.core.patterns.fiber_bundle.BaseFiberBundle" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.enriched_structure.PatternTransition" -> "src.core.patterns.enriched_structure.EnrichedTransition" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.fiber_bundle.BaseFiberBundle" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.fiber_types.FiberBundle" -> ".Protocol" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.motivic_integration.MotivicIntegrationSystem" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.motivic_integration.MotivicIntegrator" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.motivic_riemannian.MotivicRiemannianStructure" -> "src.core.patterns.cohomology.RiemannianFiberBundle" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.motivic_riemannian.MotivicRiemannianStructure" -> "src.core.patterns.riemannian_base.ValidationMixin" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.motivic_riemannian_impl.MotivicRiemannianStructureImpl" -> "src.core.patterns.riemannian.PatternRiemannianStructure" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.operadic_handler.OperadicStructureHandler" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.operadic_structure.AttentionOperad" -> "src.core.patterns.operadic_structure.OperadicComposition" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.pattern_processor.PatternProcessor" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.riemannian.BaseRiemannianStructure" -> "src.core.patterns.riemannian_base.ValidationMixin" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.riemannian.BaseRiemannianStructure" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.riemannian.PatternRiemannianStructure" -> "src.core.patterns.riemannian.BaseRiemannianStructure" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.riemannian.RiemannianFramework" -> "typing_extensions.Protocol" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.riemannian_base.RiemannianStructure" -> ".Protocol" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.riemannian_base.RiemannianValidator" -> ".Protocol" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.riemannian_flow.RiemannianFlow" -> "src.core.patterns.base_flow.BaseGeometricFlow" [arrowhead="empty", arrowtail="none"];
"src.core.patterns.symplectic.EnrichedOperator" -> "src.core.patterns.symplectic.WaveOperator" [arrowhead="empty", arrowtail="none"];
"src.core.performance.cpu_memory.CPUMemoryManager" -> "src.core.performance.memory_base.MemoryManagerBase" [arrowhead="empty", arrowtail="none"];
"src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.scale_transition.ScaleFlowIntegrator" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.scale_transition.ScaleTransitionLayer" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.tiling.geometric_flow.GeometricFlow" -> "src.core.patterns.riemannian_flow.RiemannianFlow" [arrowhead="empty", arrowtail="none"];
"src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" -> "src.core.patterns.fiber_bundle.BaseFiberBundle" [arrowhead="empty", arrowtail="none"];
"src.core.tiling.quantum_attention_tile.QuantumMotivicTile" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.core.tiling.quantum_geometric_attention.QuantumGeometricTransformer" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.neural.attention.pattern.diffusion.DiffusionSystem" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.neural.attention.pattern.dynamics.PatternDynamics" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.neural.flow.hamiltonian.HamiltonianSystem" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"src.validation.base.BasicValidationResult" -> "src.validation.base.ValidationResult" [arrowhead="empty", arrowtail="none"];
"src.validation.framework.ConcreteValidationResult" -> "src.validation.base.ValidationResult" [arrowhead="empty", arrowtail="none"];
"src.validation.framework.FrameworkValidationResult" -> "src.validation.base.ValidationResult" [arrowhead="empty", arrowtail="none"];
"src.validation.quantum.state.QuantumStateValidationResult" -> "src.validation.base.ValidationResult" [arrowhead="empty", arrowtail="none"];
"torch._dynamo.eval_frame.OptimizedModule" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"torch._tensor.Tensor" -> "torch._C.TensorBase" [arrowhead="empty", arrowtail="none"];
"torch.nn.modules.container.ModuleDict" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"torch.nn.modules.container.ModuleList" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"torch.nn.modules.container.Sequential" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"torch.nn.modules.dropout.Dropout" -> "torch.nn.modules.dropout._DropoutNd" [arrowhead="empty", arrowtail="none"];
"torch.nn.modules.dropout._DropoutNd" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"torch.nn.modules.linear.Linear" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"torch.nn.modules.normalization.LayerNorm" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"torch.nn.modules.rnn.GRU" -> "torch.nn.modules.rnn.RNNBase" [arrowhead="empty", arrowtail="none"];
"torch.nn.modules.rnn.RNNBase" -> "torch.nn.modules.module.Module" [arrowhead="empty", arrowtail="none"];
"torch.nn.parameter.Parameter" -> "torch._tensor.Tensor" [arrowhead="empty", arrowtail="none"];
"torch.optim.adam.Adam" -> "torch.optim.optimizer.Optimizer" [arrowhead="empty", arrowtail="none"];
".StructureGroup" -> "src.core.patterns.fiber_types.FiberChart" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="structure_group", style="solid"];
".T" -> "src.core.patterns.fiber_types.FiberChart" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fiber_coordinates", style="solid"];
".T" -> "src.core.patterns.fiber_types.LocalChart" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="coordinates", style="solid"];
".T" -> "src.core.patterns.riemannian_base.ChristoffelSymbols" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="values", style="solid"];
".T" -> "src.core.patterns.riemannian_base.CurvatureTensor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="riemann", style="solid"];
".T" -> "src.core.patterns.riemannian_base.CurvatureTensor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="ricci", style="solid"];
".T" -> "src.core.patterns.riemannian_base.CurvatureTensor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scalar_curvatures", style="solid"];
".T" -> "src.core.patterns.riemannian_base.MetricTensor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="values", style="solid"];
".T_destination" -> "torch.nn.modules.module.Module" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="T_destination", style="solid"];
"line_profiler.line_profiler.LineProfiler" -> "src.core.performance.cpu_optimizer.CPUOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="line_profiler", style="solid"];
"src.core.attention.geometric.EuclideanExponential" -> "src.core.tiling.quantum_geometric_attention.GeometricStructures" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="exp_map", style="solid"];
"src.core.attention.geometric.EuclideanLogarithm" -> "src.core.tiling.quantum_geometric_attention.GeometricStructures" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="log_map", style="solid"];
"src.core.attention.geometric.HyperbolicExponential" -> "src.core.tiling.quantum_geometric_attention.GeometricStructures" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="exp_map", style="solid"];
"src.core.attention.geometric.HyperbolicExponential" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="exp_map", style="solid"];
"src.core.attention.geometric.HyperbolicLogarithm" -> "src.core.tiling.quantum_geometric_attention.GeometricStructures" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="log_map", style="solid"];
"src.core.attention.geometric.HyperbolicLogarithm" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="log_map", style="solid"];
"src.core.attention.geometric.ParallelTransport" -> "src.core.attention.geometric.GeometricStructures" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transport", style="solid"];
"src.core.attention.geometric.ParallelTransport" -> "src.core.tiling.quantum_geometric_attention.GeometricStructures" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transport", style="solid"];
"src.core.attention.geometric.ParallelTransport" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transport", style="solid"];
"src.core.backends.base.AttentionBackend" -> "src.core.attention.base.BaseAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="backend", style="solid"];
"src.core.common.dimensions.DimensionManager" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="dim_manager", style="solid"];
"src.core.crystal.scale.AnomalyDetector" -> "src.core.crystal.scale.ScaleCohomology" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="anomaly_det", style="solid"];
"src.core.crystal.scale.AnomalyDetector" -> "src.core.crystal.scale.ScaleSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="anomaly", style="solid"];
"src.core.crystal.scale.RenormalizationFlow" -> "src.core.crystal.scale.ScaleCohomology" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="rg_flow", style="solid"];
"src.core.crystal.scale.RenormalizationFlow" -> "src.core.crystal.scale.ScaleSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="rg_flow", style="solid"];
"src.core.crystal.scale.ScaleCohomology" -> "src.core.crystal.scale.ScaleSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="cohomology", style="solid"];
"src.core.crystal.scale.ScaleConnection" -> "src.core.crystal.scale.ScaleCohomology" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scale_conn", style="solid"];
"src.core.crystal.scale.ScaleConnection" -> "src.core.crystal.scale.ScaleSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="connection", style="solid"];
"src.core.crystal.scale.ScaleInvariance" -> "src.core.crystal.scale.ScaleCohomology" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scale_inv", style="solid"];
"src.core.crystal.scale.ScaleInvariance" -> "src.core.crystal.scale.ScaleSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="invariance", style="solid"];
"src.core.crystal.scale.ScaleSystem" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scale_system", style="solid"];
"src.core.crystal.scale.ScaleSystem" -> "src.core.scale_transition.ScaleTransitionLayer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scale_system", style="solid"];
"src.core.flow.pattern_heat.PatternHeatFlow" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="flow", style="solid"];
"src.core.flow.quantum.QuantumGeometricFlow" -> "src.neural.attention.pattern.dynamics.PatternDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_flow", style="solid"];
"src.core.metrics.evolution.ErgodicAnalysis" -> "src.core.metrics.evolution.EvolutionAnalyzer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="ergodic", style="solid"];
"src.core.metrics.evolution.FlowEvolution" -> "src.core.metrics.evolution.EvolutionAnalyzer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="flow", style="solid"];
"src.core.metrics.evolution.LFunctionComputation" -> "src.core.metrics.evolution.EvolutionAnalyzer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="l_function", style="solid"];
"src.core.metrics.evolution.OrbitAnalysis" -> "src.core.metrics.evolution.EvolutionAnalyzer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="orbit", style="solid"];
"src.core.metrics.height_theory.HeightStructure" -> "src.core.metrics.height_theory.AdaptiveHeightTheory" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="height_structure", style="solid"];
"src.core.models.base.LayerGeometryDict" -> "src.core.models.base.ModelGeometry" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="layers", style="solid"];
"src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" -> "src.core.flow.pattern.PatternFormationFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="arithmetic", style="solid"];
"src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" -> "src.core.patterns.cohomology.MotivicCohomology" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="dynamics", style="solid"];
"src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" -> "src.core.patterns.motivic_integration.MotivicIntegrationSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="dynamics", style="solid"];
"src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" -> "src.core.patterns.motivic_riemannian.MotivicRiemannianStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="dynamics", style="solid"];
"src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="arithmetic", style="solid"];
"src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" -> "src.core.tiling.geometric_flow.GeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="arithmetic", style="solid"];
"src.core.patterns.arithmetic_dynamics.ArithmeticPattern" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="arithmetic", style="solid"];
"src.core.patterns.cohomology.AdvancedMetricsAnalyzer" -> "src.core.patterns.cohomology.MotivicCohomology" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="metrics", style="solid"];
"src.core.patterns.cohomology.HeightStructure" -> "src.core.patterns.cohomology.MotivicCohomology" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="height_structure", style="solid"];
"src.core.patterns.cohomology.HeightStructure" -> "src.core.patterns.motivic_riemannian.MotivicRiemannianStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="height_structure", style="solid"];
"src.core.patterns.cohomology.HeightStructure" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="height_structure", style="solid"];
"src.core.patterns.cohomology.MotivicCohomology" -> "src.core.patterns.cohomology.QuantumMotivicCohomology" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="motivic", style="solid"];
"src.core.patterns.cohomology.MotivicCohomology" -> "src.core.patterns.motivic_riemannian.MotivicRiemannianStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="motive", style="solid"];
"src.core.patterns.cohomology.MotivicCohomology" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="motivic_system", style="solid"];
"src.core.patterns.cohomology.QuantumMotivicCohomology" -> "src.core.patterns.motivic_integration.MotivicIntegrationSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="cohomology", style="solid"];
"src.core.patterns.cohomology.RiemannianFiberBundle" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="riemannian_bundle", style="solid"];
"src.core.patterns.dynamics.PatternDynamics" -> "src.core.flow.pattern.PatternFormationFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_dynamics", style="solid"];
"src.core.patterns.dynamics.PatternDynamics" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_dynamics", style="solid"];
"src.core.patterns.dynamics.PatternDynamics" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_dynamics", style="solid"];
"src.core.patterns.dynamics.PatternDynamics" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_dynamics", style="solid"];
"src.core.patterns.enriched_structure.PatternTransition" -> "src.core.flow.pattern.PatternFormationFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transition", style="solid"];
"src.core.patterns.enriched_structure.PatternTransition" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transition", style="solid"];
"src.core.patterns.enriched_structure.PatternTransition" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_transition", style="solid"];
"src.core.patterns.enriched_structure.PatternTransition" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transition", style="solid"];
"src.core.patterns.enriched_structure.WaveEmergence" -> "src.core.flow.pattern.PatternFormationFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="wave", style="solid"];
"src.core.patterns.enriched_structure.WaveEmergence" -> "src.core.patterns.enriched_structure.PatternTransition" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="wave", style="solid"];
"src.core.patterns.enriched_structure.WaveEmergence" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="wave", style="solid"];
"src.core.patterns.enriched_structure.WaveEmergence" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="wave", style="solid"];
"src.core.patterns.evolution.PatternEvolution" -> "src.core.flow.pattern.PatternFormationFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_evolution", style="solid"];
"src.core.patterns.evolution.PatternEvolution" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_evolution", style="solid"];
"src.core.patterns.evolution.PatternEvolution" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_evolution", style="solid"];
"src.core.patterns.evolution.PatternEvolution" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_evolution", style="solid"];
"src.core.patterns.fiber_types.FiberTypeManager" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fiber_type_manager", style="solid"];
"src.core.patterns.formation.PatternFormation" -> "src.core.flow.pattern.PatternFormationFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_formation", style="solid"];
"src.core.patterns.formation.PatternFormation" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_formation", style="solid"];
"src.core.patterns.formation.PatternFormation" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_formation", style="solid"];
"src.core.patterns.formation.PatternFormation" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_formation", style="solid"];
"src.core.patterns.motivic_integration.MotivicIntegrationSystem" -> "src.core.patterns.operadic_handler.OperadicStructureHandler" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="motivic", style="solid"];
"src.core.patterns.motivic_integration.MotivicIntegrator" -> "src.core.patterns.motivic_integration.MotivicIntegrationSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="integrator", style="solid"];
"src.core.patterns.motivic_riemannian_impl.MotivicRiemannianStructureImpl" -> "src.core.patterns.motivic_integration.MotivicIntegrationSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="geometry", style="solid"];
"src.core.patterns.motivic_riemannian_impl.MotivicRiemannianStructureImpl" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="riemannian", style="solid"];
"src.core.patterns.operadic_structure.AttentionOperad" -> "src.core.flow.pattern.PatternFormationFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="operadic", style="solid"];
"src.core.patterns.operadic_structure.AttentionOperad" -> "src.core.patterns.evolution.PatternEvolution" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="operadic", style="solid"];
"src.core.patterns.operadic_structure.AttentionOperad" -> "src.core.patterns.evolution.PatternEvolution" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="operadic", style="solid"];
"src.core.patterns.operadic_structure.AttentionOperad" -> "src.core.patterns.formation.BifurcationAnalyzer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="operadic", style="solid"];
"src.core.patterns.operadic_structure.AttentionOperad" -> "src.core.patterns.formation.PatternFormation" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="operadic", style="solid"];
"src.core.patterns.operadic_structure.AttentionOperad" -> "src.core.patterns.operadic_handler.OperadicStructureHandler" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="operad", style="solid"];
"src.core.patterns.operadic_structure.AttentionOperad" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="operadic", style="solid"];
"src.core.patterns.operadic_structure.AttentionOperad" -> "src.core.patterns.symplectic.SymplecticStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="operadic", style="solid"];
"src.core.patterns.operadic_structure.AttentionOperad" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="attention_operad", style="solid"];
"src.core.patterns.operadic_structure.EnrichedAttention" -> "src.core.patterns.evolution.PatternEvolution" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="enriched", style="solid"];
"src.core.patterns.operadic_structure.EnrichedAttention" -> "src.core.patterns.formation.BifurcationAnalyzer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="enriched", style="solid"];
"src.core.patterns.operadic_structure.EnrichedAttention" -> "src.core.patterns.formation.PatternFormation" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="enriched", style="solid"];
"src.core.patterns.operadic_structure.EnrichedAttention" -> "src.core.patterns.symplectic.SymplecticStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="enriched", style="solid"];
"src.core.patterns.pattern_processor.PatternProcessor" -> "src.core.initialization.InitializationSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_processor", style="solid"];
"src.core.patterns.riemannian.PatternRiemannianStructure" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="riemannian_framework", style="solid"];
"src.core.patterns.riemannian.PatternRiemannianStructure" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="riemannian_framework", style="solid"];
"src.core.patterns.riemannian_flow.RiemannianFlow" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="geometric_flow", style="solid"];
"src.core.patterns.symplectic.SymplecticStructure" -> "src.core.flow.pattern.PatternFormationFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="symplectic", style="solid"];
"src.core.patterns.symplectic.SymplecticStructure" -> "src.core.patterns.evolution.PatternEvolution" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="symplectic", style="solid"];
"src.core.patterns.symplectic.SymplecticStructure" -> "src.core.patterns.evolution.PatternEvolution" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="symplectic", style="solid"];
"src.core.patterns.symplectic.SymplecticStructure" -> "src.core.patterns.formation.BifurcationAnalyzer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="symplectic", style="solid"];
"src.core.patterns.symplectic.SymplecticStructure" -> "src.core.patterns.formation.PatternFormation" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="symplectic", style="solid"];
"src.core.patterns.symplectic.SymplecticStructure" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="symplectic", style="solid"];
"src.core.patterns.symplectic.SymplecticStructure" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="symplectic_structure", style="solid"];
"src.core.performance.cpu.algorithms.BranchOptimizer" -> "src.core.performance.cpu.algorithms.AlgorithmOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="branch_opt", style="solid"];
"src.core.performance.cpu.algorithms.BranchOptimizer" -> "src.core.performance.cpu.algorithms.AlgorithmOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="branch_opt", style="solid"];
"src.core.performance.cpu.algorithms.BranchOptimizer" -> "src.core.performance.cpu.algorithms.AlgorithmOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="branch_opt", style="solid"];
"src.core.performance.cpu.algorithms.FastPathOptimizer" -> "src.core.performance.cpu.algorithms.AlgorithmOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fast_path", style="solid"];
"src.core.performance.cpu.algorithms.FastPathOptimizer" -> "src.core.performance.cpu.algorithms.AlgorithmOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fast_path", style="solid"];
"src.core.performance.cpu.algorithms.FastPathOptimizer" -> "src.core.performance.cpu.algorithms.AlgorithmOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fast_path", style="solid"];
"src.core.performance.cpu.algorithms.FastPathOptimizer" -> "src.core.performance.cpu.algorithms.AlgorithmOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fast_path", style="solid"];
"src.core.performance.cpu.algorithms.InstructionCounter" -> "src.core.performance.cpu.algorithms.AlgorithmOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="instruction_counter", style="solid"];
"src.core.performance.cpu.algorithms.LoopOptimizer" -> "src.core.performance.cpu.algorithms.AlgorithmOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="loop_opt", style="solid"];
"src.core.performance.cpu.algorithms.LoopOptimizer" -> "src.core.performance.cpu.algorithms.AlgorithmOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="loop_opt", style="solid"];
"src.core.performance.cpu.algorithms.LoopOptimizer" -> "src.core.performance.cpu.algorithms.AlgorithmOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="loop_opt", style="solid"];
"src.core.performance.cpu.algorithms.NumericalOptimizer" -> "src.core.performance.cpu.algorithms.AlgorithmOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="numerical_opt", style="solid"];
"src.core.performance.cpu.algorithms.NumericalOptimizer" -> "src.core.performance.cpu.algorithms.AlgorithmOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="numerical_opt", style="solid"];
"src.core.performance.cpu.memory.CacheOptimizer" -> "src.core.performance.cpu.memory.MemoryManager" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="cache_optimizer", style="solid"];
"src.core.performance.cpu.memory.MemoryPool" -> "src.core.performance.cpu.memory.MemoryManager" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pool", style="solid"];
"src.core.performance.cpu.memory.MemoryPool" -> "src.core.performance.cpu.memory.MemoryManager" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pool", style="solid"];
"src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_bridge", style="solid"];
"src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" -> "src.core.initialization.InitializationSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_bridge", style="solid"];
"src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_bridge", style="solid"];
"src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" -> "src.core.scale_transition.ScaleTransitionLayer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_bridge", style="solid"];
"src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" -> "src.core.scale_transition.ScaleTransitionLayer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_bridge", style="solid"];
"src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" -> "src.neural.attention.pattern.quantum.QuantumGeometricTensor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bridge", style="solid"];
"src.core.quantum.state_space.HilbertSpace" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="hilbert_space", style="solid"];
"src.core.scale_transition.ScaleTransitionLayer" -> "src.core.initialization.InitializationSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scale_transition", style="solid"];
"src.core.scale_transition.ScaleTransitionLayer" -> "src.core.scale_transition.ScaleTransitionSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transition_layer", style="solid"];
"src.core.tiling.geometric_flow.GeometricFlow" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="geometric_flow", style="solid"];
"src.core.tiling.geometric_flow.GeometricFlow" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="flow", style="solid"];
"src.core.tiling.optimization.parameter_manager.ParameterMonitor" -> "src.core.tiling.optimization.parameter_manager.AdaptiveParameterManager" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="monitor", style="solid"];
"src.core.tiling.patterns.pattern_fiber_bundle.BundleConfig" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_config", style="solid"];
"src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_bundle", style="solid"];
"src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_bundle", style="solid"];
"src.core.tiling.quantum_attention_tile.QuantumMotivicTile" -> "src.core.initialization.InitializationSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_tile", style="solid"];
"src.core.tiling.quantum_attention_tile.QuantumMotivicTile" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_tile", style="solid"];
"src.core.tiling.quantum_attention_tile.QuantumMotivicTile" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_tile", style="solid"];
"src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_attention", style="solid"];
"src.core.tiling.state_manager.StateManager" -> "src.core.initialization.InitializationSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="state_manager", style="solid"];
"src.core.tiling.state_manager.StateManager" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="state_manager", style="solid"];
"src.core.tiling.state_manager.StateManager" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="state_manager", style="solid"];
"src.core.tiling.state_manager.StateType" -> "src.core.initialization.InitializationConfig" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="state_type", style="solid"];
"src.core.tiling.state_manager.StateType" -> "src.core.tiling.state_manager.StateConfig" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="type", style="solid"];
"src.infrastructure.base.CPUOptimizer" -> "src.infrastructure.base.CPUDevice" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="optimizer", style="solid"];
"src.infrastructure.base.MemoryManager" -> "src.infrastructure.base.CPUDevice" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="memory_manager", style="solid"];
"src.infrastructure.base.ParallelProcessor" -> "src.infrastructure.base.CPUDevice" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="parallel_processor", style="solid"];
"src.infrastructure.metrics.PerformanceMetrics" -> "src.infrastructure.metrics.InfrastructureMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="performance", style="solid"];
"src.infrastructure.metrics.ResourceMetrics" -> "src.infrastructure.metrics.InfrastructureMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="resources", style="solid"];
"src.metrics.quantum_geometric_metrics.ArithmeticMetrics" -> "src.metrics.quantum_geometric_metrics.UnifiedMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="arithmetic", style="solid"];
"src.metrics.quantum_geometric_metrics.GeometricMetrics" -> "src.metrics.quantum_geometric_metrics.UnifiedMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="geometric", style="solid"];
"src.metrics.quantum_geometric_metrics.PatternMetrics" -> "src.metrics.quantum_geometric_metrics.UnifiedMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern", style="solid"];
"src.metrics.quantum_geometric_metrics.QuantumMetrics" -> "src.metrics.quantum_geometric_metrics.UnifiedMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum", style="solid"];
"src.neural.attention.pattern.diffusion.DiffusionSystem" -> "src.neural.attention.pattern.dynamics.PatternDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="diffusion", style="solid"];
"src.neural.attention.pattern.dynamics.PatternDynamics" -> "src.core.attention.routing.InformationRouter" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_dynamics", style="solid"];
"src.neural.attention.pattern.quantum.QuantumGeometricTensor" -> "src.neural.attention.pattern.dynamics.PatternDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_tensor", style="solid"];
"src.neural.attention.pattern.reaction.ReactionSystem" -> "src.neural.attention.pattern.dynamics.PatternDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="reaction", style="solid"];
"src.neural.attention.pattern.stability.StabilityAnalyzer" -> "src.neural.attention.pattern.dynamics.PatternDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="stability", style="solid"];
"src.neural.flow.hamiltonian.HamiltonianSystem" -> "src.neural.attention.pattern.dynamics.PatternDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="hamiltonian_system", style="solid"];
"src.utils.memory_management.TensorManager" -> "src.utils.memory_management.MemoryOptimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="tensor_manager", style="solid"];
"src.validation.flow.stability.LinearStabilityValidator" -> "src.validation.patterns.stability.PatternValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="linear_validator", style="solid"];
"src.validation.flow.stability.NonlinearStabilityValidator" -> "src.validation.patterns.stability.PatternValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="nonlinear_validator", style="solid"];
"src.validation.flow.stability.StructuralStabilityValidator" -> "src.validation.patterns.stability.PatternValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="structural_validator", style="solid"];
"src.validation.geometric.symplectic.OperadicValidator" -> "src.validation.geometric.symplectic.SymplecticStructureValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="operadic_validator", style="solid"];
"src.validation.geometric.symplectic.QuantumGeometricValidator" -> "src.validation.geometric.symplectic.SymplecticStructureValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_validator", style="solid"];
"src.validation.geometric.symplectic.SymplecticStructureValidator" -> "src.validation.framework.ValidationFramework" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="symplectic_validator", style="solid"];
"src.validation.geometric.symplectic.WavePacketValidator" -> "src.validation.geometric.symplectic.SymplecticStructureValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="wave_validator", style="solid"];
"src.validation.quantum.evolution.AdiabaticValidator" -> "src.validation.quantum.evolution.QuantumEvolutionValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="adiabatic_validator", style="solid"];
"src.validation.quantum.evolution.DecoherenceValidator" -> "src.validation.quantum.evolution.QuantumEvolutionValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="decoherence_validator", style="solid"];
"src.validation.quantum.evolution.UnitaryValidator" -> "src.validation.quantum.evolution.QuantumEvolutionValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="unitary_validator", style="solid"];
"src.validation.quantum.state.DensityMatrixValidator" -> "src.validation.quantum.state.QuantumStateValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="density_validator", style="solid"];
"src.validation.quantum.state.DensityMatrixValidator" -> "src.validation.quantum.state.StatePreparationValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="density_validator", style="solid"];
"src.validation.quantum.state.DensityMatrixValidator" -> "src.validation.quantum.state.StateValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="density_validator", style="solid"];
"src.validation.quantum.state.StatePreparationValidator" -> "src.core.flow.quantum.GeometricFlowAnalyzer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="preparation_validator", style="solid"];
"src.validation.quantum.state.StatePreparationValidator" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="state_preparation", style="solid"];
"src.validation.quantum.state.StatePreparationValidator" -> "src.validation.quantum.state.QuantumStateValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="preparation_validator", style="solid"];
"src.validation.quantum.state.StatePreparationValidator" -> "src.validation.quantum.state.StateValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="preparation_validator", style="solid"];
"src.validation.quantum.state.StateValidator" -> "src.core.flow.quantum.GeometricFlowAnalyzer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="state_validator", style="solid"];
"src.validation.quantum.state.StateValidator" -> "src.core.flow.quantum.QuantumGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="state_validator", style="solid"];
"src.validation.quantum.state.StateValidator" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="state_validator", style="solid"];
"src.validation.quantum.state.StateValidator" -> "src.validation.quantum.evolution.DecoherenceValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="state_validator", style="solid"];
"src.validation.quantum.state.TomographyValidator" -> "src.core.flow.quantum.QuantumGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="tomography_validator", style="solid"];
"src.validation.quantum.state.TomographyValidator" -> "src.validation.quantum.state.QuantumStateValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="tomography_validator", style="solid"];
"src.validation.quantum.state.TomographyValidator" -> "src.validation.quantum.state.StatePreparationValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="tomography_validator", style="solid"];
"src.validation.quantum.state.TomographyValidator" -> "src.validation.quantum.state.StateValidator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="tomography_validator", style="solid"];
"torch._C.Size" -> "torch._C.TensorBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="shape", style="solid"];
"torch._C.device" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.device" -> "src.core.patterns.fiber_bundle.BaseFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.device" -> "src.core.patterns.motivic_integration.MotivicIntegrationSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.device" -> "src.core.patterns.motivic_integration.MotivicIntegrationSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.device" -> "src.core.patterns.motivic_riemannian.MotivicRiemannianStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.device" -> "src.core.patterns.motivic_riemannian.MotivicRiemannianStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.device" -> "src.core.patterns.operadic_handler.OperadicStructureHandler" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.device" -> "src.core.patterns.riemannian.BaseRiemannianStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.device" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.device" -> "src.core.tiling.patterns.pattern_fiber_bundle.PatternFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.device" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.device" -> "src.core.tiling.state_manager.StateManager" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.device" -> "src.metrics.quantum_geometric_metrics.MetricContext" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.device" -> "torch._C.TensorBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.dtype" -> "src.core.scale_transition.ScaleTransitionConfig" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.tiling.state_manager.StateConfig" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "torch._C.TensorBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.layout" -> "torch._C.TensorBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="layout", style="solid"];
"torch._dynamo.eval_frame.OptimizedModule" -> "torch.nn.modules.module.Module" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_compiled_call_impl", style="solid"];
"torch._tensor.Tensor" -> "src.core.flow.neural.SingularityInfo" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="eigenvalues", style="solid"];
"torch._tensor.Tensor" -> "src.core.flow.protocol.QuantumFlowMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_entropy", style="solid"];
"torch._tensor.Tensor" -> "src.core.metrics.evolution.EvolutionMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="l_values", style="solid"];
"torch._tensor.Tensor" -> "src.core.metrics.evolution.EvolutionMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="flow_metrics", style="solid"];
"torch._tensor.Tensor" -> "src.core.metrics.evolution.EvolutionMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="ergodic_avg", style="solid"];
"torch._tensor.Tensor" -> "src.core.patterns.cohomology.ArithmeticForm" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="coefficients", style="solid"];
"torch._tensor.Tensor" -> "src.core.patterns.enriched_structure.EnrichedMorphism" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="source_space", style="solid"];
"torch._tensor.Tensor" -> "src.core.patterns.enriched_structure.EnrichedMorphism" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="target_space", style="solid"];
"torch._tensor.Tensor" -> "src.core.patterns.enriched_structure.EnrichedMorphism" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="structure_map", style="solid"];
"torch._tensor.Tensor" -> "src.core.patterns.evolution.PatternEvolutionMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_metric", style="solid"];
"torch._tensor.Tensor" -> "src.core.patterns.evolution.PatternEvolutionMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="geometric_flow", style="solid"];
"torch._tensor.Tensor" -> "src.core.patterns.formation.BifurcationMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_metric", style="solid"];
"torch._tensor.Tensor" -> "src.core.patterns.formation.BifurcationMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="geometric_flow", style="solid"];
"torch._tensor.Tensor" -> "src.core.patterns.operadic_structure.OperadicOperation" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="composition_law", style="solid"];
"torch._tensor.Tensor" -> "src.core.patterns.symplectic.SymplecticForm" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="matrix", style="solid"];
"torch._tensor.Tensor" -> "src.core.tiling.quantum_geometric_attention.AttentionMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="entropy", style="solid"];
"torch._tensor.Tensor" -> "src.core.tiling.quantum_geometric_attention.AttentionMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="complexity", style="solid"];
"torch._tensor.Tensor" -> "src.core.tiling.quantum_geometric_attention.AttentionState" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_state", style="solid"];
"torch._tensor.Tensor" -> "src.core.tiling.quantum_geometric_attention.AttentionState" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="geometric_state", style="solid"];
"torch._tensor.Tensor" -> "src.core.tiling.quantum_geometric_attention.FlowMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="curvature", style="solid"];
"torch._tensor.Tensor" -> "src.core.tiling.quantum_geometric_attention.FlowMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="parallel_transport", style="solid"];
"torch._tensor.Tensor" -> "src.core.tiling.quantum_geometric_attention.FlowMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="geodesic_distance", style="solid"];
"torch._tensor.Tensor" -> "src.core.tiling.quantum_geometric_attention.FlowMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="energy", style="solid"];
"torch._tensor.Tensor" -> "src.core.types.PatternState" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="coordinates", style="solid"];
"torch._tensor.Tensor" -> "src.core.types.PatternState" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="metric", style="solid"];
"torch._tensor.Tensor" -> "src.core.types.RiemannianMetric" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="tensor", style="solid"];
"torch._tensor.Tensor" -> "src.validation.quantum.state.DensityMatrixValidation" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="eigenvalues", style="solid"];
"torch._tensor.Tensor" -> "src.validation.quantum.state.StateProperties" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="eigenvalues", style="solid"];
"torch._tensor.Tensor" -> "src.validation.quantum.state.TomographyValidation" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="estimated_state", style="solid"];
"torch._tensor.Tensor" -> "torch._C.TensorBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="data", style="solid"];
"torch._tensor.Tensor" -> "torch._C.TensorBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="real", style="solid"];
"torch._tensor.Tensor" -> "torch._C.TensorBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="imag", style="solid"];
"torch._tensor.Tensor" -> "torch._C.TensorBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="T", style="solid"];
"torch._tensor.Tensor" -> "torch._C.TensorBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="H", style="solid"];
"torch._tensor.Tensor" -> "torch._C.TensorBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="mT", style="solid"];
"torch._tensor.Tensor" -> "torch._C.TensorBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="mH", style="solid"];
"torch.nn.modules.container.ModuleList" -> "src.core.crystal.scale.ScaleConnection" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="connections", style="solid"];
"torch.nn.modules.container.ModuleList" -> "src.core.crystal.scale.ScaleInvariance" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scale_transform", style="solid"];
"torch.nn.modules.container.ModuleList" -> "src.core.metrics.evolution.ErgodicAnalysis" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="observables", style="solid"];
"torch.nn.modules.container.ModuleList" -> "src.core.models.base.ModelGeometry" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="attention_heads", style="solid"];
"torch.nn.modules.container.ModuleList" -> "src.core.patterns.arithmetic_dynamics.ArithmeticPattern" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="layers", style="solid"];
"torch.nn.modules.container.ModuleList" -> "src.core.patterns.base_flow.BaseGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="flow_layers", style="solid"];
"torch.nn.modules.container.ModuleList" -> "src.core.scale_transition.ScaleFlowIntegrator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scale_dependent_ops", style="solid"];
"torch.nn.modules.container.ModuleList" -> "src.core.scale_transition.ScaleTransitionLayer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scale_up", style="solid"];
"torch.nn.modules.container.ModuleList" -> "src.core.scale_transition.ScaleTransitionLayer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scale_down", style="solid"];
"torch.nn.modules.container.ModuleList" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="attention_layers", style="solid"];
"torch.nn.modules.container.ModuleList" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricTransformer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="layers", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.attention.routing.InformationRouter" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="route_scorer", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.attention.routing.InformationRouter" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bottleneck_detector", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.crystal.scale.AnomalyDetector" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="detector", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.crystal.scale.RenormalizationFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="beta_network", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.crystal.scale.RenormalizationFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fp_detector", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.crystal.scale.ScaleCohomology" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="cocycle_computer", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.crystal.scale.ScaleCohomology" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="coboundary_computer", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.crystal.scale.ScaleCohomology" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="callan_symanzik_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.crystal.scale.ScaleCohomology" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="ope_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.crystal.scale.ScaleCohomology" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="conformal_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.crystal.scale.ScaleConnection" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="holonomy_computer", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.crystal.scale.ScaleInvariance" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="invariant_detector", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.base.BaseGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="metric_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.base.BaseGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="connection_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.base.BaseGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="curvature_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.computation.FlowComputation" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="vector_field", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.computation.FlowComputation" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="potential", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.higher_order.HigherOrderFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fourth_order_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.higher_order.HigherOrderFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bach_tensor_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.higher_order.HigherOrderFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="calabi_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.higher_order.HigherOrderFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="cross_curvature_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.information_ricci.InformationRicciFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="potential_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.information_ricci.InformationRicciFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="stress_energy_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="metric_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="metric_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fisher_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="expectation_projection", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="metric_projection", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_correction_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="connection_projection", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="connection_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="connection_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="stability_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.pattern.PatternFormationFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="reaction_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.pattern.PatternFormationFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="diffusion_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.pattern.PatternFormationFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="stability_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.pattern.PatternFormationFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="control_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.pattern_heat.PatternHeatFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.protocol.RicciTensorNetwork" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="hidden", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.quantum.QuantumGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="uncertainty_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.quantum.QuantumGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="entanglement_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.quantum.QuantumGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="mean_curvature_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.quantum.QuantumGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fubini_study_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.quantum.QuantumGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_transport_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.flow.quantum.QuantumGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="state_reconstruction_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.metrics.evolution.LFunctionComputation" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="network", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="l_function", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_height", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_l_function", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.patterns.arithmetic_dynamics.ModularFormComputer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="coeff_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.patterns.arithmetic_dynamics.ModularFormComputer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="symmetry_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.patterns.base_flow.BaseGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="metric_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.patterns.motivic_integration.MotivicIntegrator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="initial_proj", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.patterns.motivic_integration.MotivicIntegrator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="measure_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.patterns.motivic_integration.MotivicIntegrator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="domain_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="flow_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.patterns.riemannian_flow.RiemannianFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="christoffel_net", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.tiling.geometric_flow.GeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="hamiltonian", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_attention", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="to_out", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.neural.attention.pattern.reaction.ReactionSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="activator_network", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.neural.attention.pattern.reaction.ReactionSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="inhibitor_network", style="solid"];
"torch.nn.modules.container.Sequential" -> "src.neural.flow.hamiltonian.HamiltonianSystem" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="hamiltonian_network", style="solid"];
"torch.nn.modules.dropout.Dropout" -> "src.core.tiling.quantum_attention_tile.QuantumMotivicTile" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="dropout_layer", style="solid"];
"torch.nn.modules.dropout.Dropout" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="dropout", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.flow.protocol.RicciTensorNetwork" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="projection", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.flow.protocol.RicciTensorNetwork" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="output", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.metrics.evolution.FlowEvolution" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="flow", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.metrics.evolution.OrbitAnalysis" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="projection", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.metrics.height_theory.AdaptiveHeightTheory" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="height_projection", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="height_map", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="flow", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="adelic_proj", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="measure_proj", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="output_proj", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quantum_proj", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.patterns.arithmetic_dynamics.ArithmeticPattern" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_proj", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.patterns.cohomology.RiemannianFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fiber_map", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.patterns.cohomology.RiemannianFiberBundle" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="connection_map", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.patterns.motivic_riemannian.MotivicRiemannianStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fiber_map", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.patterns.motivic_riemannian.MotivicRiemannianStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="connection_map", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="input_proj", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.patterns.pattern_processor.PatternProcessor" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="output_proj", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.scale_transition.ScaleFlowIntegrator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scale_quantum_proj", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.scale_transition.ScaleFlowIntegrator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scale_classical_proj", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.tiling.quantum_attention_tile.QuantumMotivicTile" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="query", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.tiling.quantum_attention_tile.QuantumMotivicTile" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="key", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.tiling.quantum_attention_tile.QuantumMotivicTile" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="value", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.tiling.quantum_attention_tile.QuantumMotivicTile" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="output", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.tiling.quantum_attention_tile.QuantumMotivicTile" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="cohomology_proj", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.tiling.quantum_attention_tile.QuantumMotivicTile" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="field_proj", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.tiling.quantum_attention_tile.QuantumMotivicTile" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="height_proj", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="manifold_proj", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="manifold_proj_inv", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_proj", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_proj_inv", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="to_qkv", style="solid"];
"torch.nn.modules.linear.Linear" -> "src.metrics.quantum_geometric_metrics.ArithmeticMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="motive_proj", style="solid"];
"torch.nn.modules.normalization.LayerNorm" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="layer_norm", style="solid"];
"torch.nn.modules.normalization.LayerNorm" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="manifold_norm", style="solid"];
"torch.nn.modules.normalization.LayerNorm" -> "src.core.scale_transition.ScaleTransitionLayer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scale_norm", style="solid"];
"torch.nn.modules.normalization.LayerNorm" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricTransformer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="norm", style="solid"];
"torch.nn.modules.rnn.GRU" -> "src.core.attention.routing.InformationRouter" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="path_predictor", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.attention.geometric.GeometricStructures" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="metric", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.attention.geometric.GeometricStructures" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="connection", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.attention.geometric.GeometricStructures" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="curvature_tensor", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.attention.geometric.HyperbolicExponential" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="curvature", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.attention.geometric.HyperbolicLogarithm" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="curvature", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.flow.quantum.QuantumGeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="berry_connection", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.models.base.LayerGeometry" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="metric_tensor", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.models.base.LayerGeometry" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="connection_coeffs", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="coupling", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.patterns.motivic_riemannian.MotivicRiemannianStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="metric_factors", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.patterns.motivic_riemannian.MotivicRiemannianStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="connection_coeffs", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.patterns.riemannian.BaseRiemannianStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="metric_factors", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.patterns.riemannian.BaseRiemannianStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="connection_coeffs", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.patterns.riemannian.PatternRiemannianStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="metric_factors", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.patterns.riemannian.PatternRiemannianStructure" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="connection_coeffs", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.quantum.state_space.HilbertSpace" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="hamiltonian", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.scale_transition.ScaleFlowIntegrator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="entanglement_tracker", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.tiling.geometric_flow.GeometricFlow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="chart_embedding", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.tiling.quantum_geometric_attention.PatternDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="patterns", style="solid"];
"torch.nn.parameter.Parameter" -> "src.core.tiling.quantum_geometric_attention.PatternDynamics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pattern_scores", style="solid"];
"torch.nn.parameter.Parameter" -> "src.metrics.quantum_geometric_metrics.ArithmeticMetrics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="prime_bases", style="solid"];
"torch.nn.parameter.Parameter" -> "torch.nn.modules.linear.Linear" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="weight", style="solid"];
"torch.nn.parameter.Parameter" -> "torch.nn.modules.linear.Linear" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bias", style="solid"];
"torch.nn.parameter.Parameter" -> "torch.nn.modules.normalization.LayerNorm" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="weight", style="solid"];
"torch.nn.parameter.Parameter" -> "torch.nn.modules.normalization.LayerNorm" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bias", style="solid"];
"torch.optim.adam.Adam" -> "src.core.metrics.height_theory.AdaptiveHeightTheory" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="optimizer", style="solid"];
"typing_extensions._ExtensionsSpecialForm" -> "torch.optim.optimizer.Optimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="OptimizerPreHook", style="solid"];
"typing_extensions._ExtensionsSpecialForm" -> "torch.optim.optimizer.Optimizer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="OptimizerPostHook", style="solid"];
"src.core.common.dimensions.DimensionConfig" -> "src.core.common.dimensions.DimensionManager" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="config", style="solid"];
"src.core.flow.quantum.QuantumGeometricFlow" -> "src.core.flow.quantum.GeometricFlowAnalyzer" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="flow", style="solid"];
"src.core.initialization.InitializationConfig" -> "src.core.initialization.InitializationSystem" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="config", style="solid"];
"src.core.models.base.ModelGeometry" -> "src.validation.geometric.model.ModelGeometricValidator" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="model_geometry", style="solid"];
"src.core.patterns.arithmetic_dynamics.ArithmeticDynamics" -> "src.core.patterns.motivic_riemannian.MotivicChristoffelSymbols" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dynamics", style="solid"];
"src.core.patterns.cohomology.FiberBundle" -> "src.core.patterns.cohomology.CohomologyGroup" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="base_space", style="solid"];
"src.core.patterns.cohomology.HeightStructure" -> "src.core.patterns.motivic_riemannian.MotivicMetricTensor" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="height_structure", style="solid"];
"src.core.patterns.cohomology.MotivicCohomology" -> "src.core.patterns.motivic_riemannian.MotivicCurvatureTensor" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="motive", style="solid"];
"src.core.patterns.cohomology.RiemannianFiberBundle" -> "src.core.patterns.cohomology.MotivicCohomology" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="base_space", style="solid"];
"src.core.patterns.riemannian.PatternRiemannianStructure" -> "src.core.patterns.cohomology.DeRhamCohomology" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="manifold", style="solid"];
"src.core.patterns.riemannian.PatternRiemannianStructure" -> "src.core.patterns.cohomology.Integration" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="manifold", style="solid"];
"src.core.patterns.riemannian.PatternRiemannianStructure" -> "src.core.patterns.cohomology.QuantumMotivicCohomology" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="metric", style="solid"];
"src.core.patterns.riemannian.RiemannianFramework" -> "src.core.patterns.evolution.PatternEvolution" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="framework", style="solid"];
"src.core.scale_transition.ScaleTransitionConfig" -> "src.core.scale_transition.ScaleFlowIntegrator" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="config", style="solid"];
"src.core.scale_transition.ScaleTransitionConfig" -> "src.core.scale_transition.ScaleTransitionLayer" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="config", style="solid"];
"src.core.scale_transition.ScaleTransitionConfig" -> "src.core.scale_transition.ScaleTransitionSystem" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="config", style="solid"];
"src.core.tiling.state_manager.StateConfig" -> "src.core.tiling.state_manager.StateManager" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="config", style="solid"];
"src.metrics.quantum_geometric_metrics.MetricDomain" -> "src.metrics.quantum_geometric_metrics.BaseMetric" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="domain", style="solid"];
"src.validation.geometric.model.ModelGeometricValidator" -> "src.validation.framework.ValidationFramework" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="geometric_validator", style="solid"];
"src.validation.patterns.stability.PatternValidator" -> "src.validation.framework.ValidationFramework" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="pattern_validator", style="solid"];
"src.validation.quantum.state.QuantumStateValidator" -> "src.validation.framework.ValidationFramework" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="quantum_validator", style="solid"];
"torch._C.device" -> "src.core.patterns.dynamics.PatternDynamics" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="device", style="solid"];
"torch._C.dtype" -> "src.core.attention.geometric.EuclideanExponential" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.attention.geometric.EuclideanLogarithm" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.attention.geometric.HyperbolicExponential" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.attention.geometric.HyperbolicLogarithm" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.attention.geometric.ParallelTransport" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.flow.neural.NeuralGeometricFlow" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.flow.pattern.PatternFormationFlow" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.patterns.base_flow.BaseGeometricFlow" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.patterns.enriched_structure.WaveEmergence" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.patterns.formation.BifurcationAnalyzer" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.patterns.operadic_structure.AttentionOperad" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.patterns.operadic_structure.EnrichedAttention" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.patterns.symplectic.SymplecticStructure" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.quantum.neural_quantum_bridge.NeuralQuantumBridge" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.tiling.geometric_flow.GeometricFlow" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.tiling.quantum_attention_tile.QuantumMotivicTile" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._C.dtype" -> "src.core.tiling.quantum_geometric_attention.QuantumGeometricAttention" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="dtype", style="solid"];
"torch._tensor.Tensor" -> "src.core.flow.quantum.QuantumGeometricFlow" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="_points", style="solid"];
"torch._tensor.Tensor" -> "src.core.tiling.patterns.pattern_fiber_bundle.TensorStateContext" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="original_tensor", style="solid"];
"torch._tensor.Tensor" -> "src.metrics.quantum_metrics.QuantumMetrics" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="state", style="solid"];
"torch.nn.modules.module.Module" -> "torch._dynamo.eval_frame.OptimizedModule" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="_orig_mod", style="solid"];
}
